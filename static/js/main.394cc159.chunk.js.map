{"version":3,"sources":["reducer.js","stores.js","actions.js","components/counter.js","components/app.js","index.js"],"names":["reducer","state","action","type","payload","results","arr","concat","id","Date","value","filter","result","inc","dec","reset","storeadd","storedel","rnd","Math","floor","random","useStyles","makeStyles","gridContainer","flexGrow","gridItem","display","flexDirection","justifyContent","alignItems","cardMedia","height","listItem","cursor","connect","counter","ctr","res","actions","classes","className","Grid","container","spacing","item","xs","CardContent","Typography","variant","gutterBottom","CardActions","Button","onClick","color","List","component","aria-label","map","ListItem","key","App","rootReducer","combineReducers","stores","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.394cc159.chunk.js","sourcesContent":["const reducer = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case 'INC':\r\n            return state + 1;\r\n        case 'DEC':\r\n            return state - 1;\r\n        case 'RND':\r\n            return state + action.payload;\r\n        case 'RESET':\r\n            return 0;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","const reducer = (results = [], action) => {\r\n    switch (action.type) {\r\n        case 'STOREADD': {\r\n            const arr = results.concat({id: new Date(), value: action.payload});\r\n            return arr;\r\n        }\r\n        case 'STOREDEL': {\r\n            const arr = results.filter(result => result.id !== action.payload);\r\n            return arr;\r\n        }\r\n        default:\r\n            return results;\r\n    }\r\n};\r\n\r\nexport default reducer;","export const inc = () => {\r\n    return {\r\n        type: 'INC'\r\n    }\r\n};\r\n\r\nexport const dec = () => {\r\n    return {\r\n        type: 'DEC'\r\n    }\r\n};\r\n\r\nexport const reset = () => {\r\n    return {\r\n        type: 'RESET'\r\n    }\r\n};\r\n\r\nexport const storeadd = (value) => {\r\n    return {\r\n        type: 'STOREADD',\r\n        payload: value\r\n    }\r\n};\r\n\r\nexport const storedel = (value) => {\r\n    return {\r\n        type: 'STOREDEL',\r\n        payload: value\r\n    }\r\n};\r\n\r\nexport const rnd = () => {\r\n    return {\r\n        type: 'RND',\r\n        payload: Math.floor(Math.random()*7)\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Button, CardActions, Typography, CardContent, List, ListItem } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    gridContainer: {\r\n        flexGrow: 1,\r\n    },\r\n    gridItem: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    cardMedia: {\r\n        height: \"35vh\",\r\n    },\r\n    listItem: {\r\n        cursor: \"pointer\",\r\n    },\r\n}));\r\n\r\nconst Counter = ({ counter, results, inc, dec, rnd, reset, storeadd, storedel }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <main className='circle-container'>\r\n            <Grid container className = {classes.gridContainer} spacing = {3}>\r\n                <Grid item xs = {12} className = {classes.gridItem}>\r\n                    <CardContent>\r\n                        <Typography variant = \"h1\" gutterBottom>{counter}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item xs = {12} className = {classes.gridItem}>\r\n                    <CardActions>\r\n                        <Button\r\n                            onClick = {inc}\r\n                            variant = \"contained\"\r\n                            color = \"secondary\">\r\n                            Inc\r\n                        </Button>\r\n                    </CardActions>\r\n                    <CardActions>\r\n                        <Button\r\n                            onClick = {dec}\r\n                            variant = \"contained\"\r\n                            color = \"secondary\">\r\n                            Dec\r\n                        </Button>\r\n                    </CardActions>\r\n                    <CardActions>\r\n                        <Button\r\n                            onClick = {rnd}\r\n                            variant = \"contained\"\r\n                            color = \"secondary\">\r\n                            Rnd\r\n                        </Button>\r\n                        <Button\r\n                            onClick = {reset}\r\n                            variant = \"contained\"\r\n                            color = \"secondary\">\r\n                            Reset\r\n                        </Button>\r\n                        <Button\r\n                            onClick = {() => storeadd(counter)}\r\n                            variant = \"contained\"\r\n                            color = \"secondary\">\r\n                            store\r\n                        </Button>\r\n                    </CardActions>\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.gridItem}>\r\n                    <CardContent>\r\n                        <List component = \"nav\" aria-label = \"main mailbox folders\">\r\n                            {results.map(item => (\r\n                                <ListItem\r\n                                    key={item.id}\r\n                                    className = {classes.listItem}\r\n                                    onClick = {() => storedel(item.id)}>\r\n                                    {item.value}\r\n                                </ListItem>\r\n                        ))}\r\n                        </List>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </main>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ctr, res}) => {\r\n    return {\r\n        counter: ctr,\r\n        results: res\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(Counter);","import React from 'react';\nimport Counter from './counter';\n\nconst App = () => {\n  return <Counter />;\n};\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, combineReducers } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reducer from './reducer';\r\nimport stores from './stores';\r\nimport App from './components/app';\r\n\r\nconst rootReducer = combineReducers({\r\n    ctr: reducer,\r\n    res: stores\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n"],"sourceRoot":""}